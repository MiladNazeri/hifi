set(TARGET_NAME screenshare)
add_custom_target(${TARGET_NAME}-npm-install
	COMMAND npm install
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)
add_custom_target(${TARGET_NAME}
	COMMAND npm run packager
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	DEPENDS ${TARGET_NAME}-npm-install
)

set_target_properties(${TARGET_NAME} PROPERTIES FOLDER "screenshare")
set_target_properties(${TARGET_NAME}-npm-install PROPERTIES FOLDER "hidden/screenshare")

if (WIN32)
	set(PACKAGED_SCREENSHARE_FOLDER "screenshare-win32-x64")
	set(SCREENSHARE_DESTINATION "${CMAKE_CURRENT_BINARY_DIR}/${PACKAGED_SCREENSHARE_FOLDER}")
	install(
		DIRECTORY "${SCREENSHARE_DESTINATION}/"
		DESTINATION ${SCREENSHARE_INSTALL_DIR}
	)

	set(EXECUTABLE_PATH "${SCREENSHARE_DESTINATION}/${SCREENSHARE_EXEC_NAME}")
	optional_win_executable_signing()
elseif (APPLE)
	set(PACKAGED_SCREENSHARE_FOLDER "screenshare-darwin-x64/${SCREENSHARE_EXEC_NAME}")
	install(
		DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/${PACKAGED_SCREENSHARE_FOLDER}"
		USE_SOURCE_PERMISSIONS
		DESTINATION ${SCREENSHARE_INSTALL_DIR}
	)
endif()

set_target_properties(${TARGET_NAME} PROPERTIES EXCLUDE_FROM_ALL FALSE EXCLUDE_FROM_DEFAULT_BUILD FALSE)
