set(TARGET_NAME screenshare)
add_custom_target(${TARGET_NAME}-npm-install
	COMMAND npm install
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)
add_custom_target(${TARGET_NAME}
	COMMAND npm run packager
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	DEPENDS ${TARGET_NAME}-npm-install
)

set_target_properties(${TARGET_NAME} PROPERTIES FOLDER "Screenshare")
set_target_properties(${TARGET_NAME}--npm-install PROPERTIES FOLDER "hidden/Screenshare")

add_dependencies(${TARGET_NAME} interface)
set(PACKAGED_SCREENSHARE_FOLDER "screenshare-win32-x64")
set(SCREENSHARE_DESTINATION "${CMAKE_CURRENT_BINARY_DIR}/${PACKAGED_SCREENSHARE_FOLDER}")

set(SCREENSHARE_INSTALL_DIR "screenshare")

install(
	DIRECTORY "${SCRENSHARE_DESTINATION}/"
	DESTINATION ${SCREENSHARE_INSTALL_DIR}
)

set(SCREENSHARE_EXEC_NAME "screenshare.exe")

set(EXECUTABLE_PATH "${SCREENSHARE_DESTINATION}/${SCREENSHARE_EXEC_NAME}")
optional_win_executable_signing()

set_target_properties(${TARGET_NAME} PROPERTIES EXCLUDE_FROM_ALL FALSE EXCLUDE_FROM_DEFAULT_BUILD FALSE)
set(BESIDE_SCREENSHARE_DIR ${SCREENSHARE_INSTALL_DIR})
set(SCREENSHARE_BUILD_INFO_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/build-info.json")
configure_file("${HF_CMAKE_DIR}/templates/screenshare-build-info.json.in" ${SCREENSHARE_BUILD_INFO_OUTPUT})
install(
	FILES ${SCREENSHARE_BUILD_INFO_OUTPUT}
	DESTINATION ${BESIDE_SCREENSHARE_DIR}
	COMPONENT ${CLIENT_COMPONENT}
)




